# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

# üîß Custom Linting Configuration (2025)
# Enable Riverpod linting for better development experience
plugins:
  - custom_lint

# üìù Custom Linter Rules
analyzer:
  exclude:
    # Exclude generated files from analysis
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.mocks.dart"
    - "build/**"
    - "lib/generated_plugin_registrant.dart"
  
  # Enable additional language features
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # üéØ Standard Flutter lints (already included, but explicitly listed for clarity)
    avoid_print: true
    prefer_single_quotes: true
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables: true
    
    # üîß Additional recommended lints for 2025
    prefer_final_locals: true
    prefer_final_in_for_each: true
    prefer_final_fields: true
    avoid_redundant_argument_values: true
    avoid_unnecessary_containers: true
    avoid_web_libraries_in_flutter: true
    no_logic_in_create_state: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    sized_box_for_whitespace: true
    sort_child_properties_last: true
    use_build_context_synchronously: true
    use_colored_box: true
    use_decorated_box: true
    use_full_hex_values_for_flutter_colors: true
    use_key_in_widget_constructors: true
    
    # üóÑÔ∏è Database and async-related lints
    close_sinks: true
    cancel_subscriptions: true
    avoid_slow_async_io: true
    
    # üì± Performance-related lints
    avoid_function_literals_in_foreach_calls: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_spread_collections: true
    
    # üõ°Ô∏è Security and safety lints
    avoid_dynamic_calls: true
    avoid_type_to_string: true
    no_adjacent_strings_in_list: true
    throw_in_finally: true
    
    # üé® Style and consistency lints
    always_put_control_body_on_new_line: true
    always_put_required_named_parameters_first: true
    avoid_escaping_inner_quotes: true
    avoid_field_initializers_in_const_classes: true
    avoid_implementing_value_types: true
    avoid_js_rounded_ints: true
    avoid_multiple_declarations_per_line: true
    avoid_positional_boolean_parameters: true
    avoid_private_typedef_functions: true
    avoid_renaming_method_parameters: true
    avoid_returning_null_for_future: true
    avoid_setters_without_getters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_types_on_closure_parameters: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    cascade_invocations: true
    combinators_ordering: true
    conditional_uri_does_not_exist: true
    deprecated_consistency: true
    directives_ordering: true
    do_not_use_environment: true
    eol_at_end_of_file: true
    flutter_style_todos: true
    leading_newlines_in_multiline_strings: true
    library_private_types_in_public_api: true
    missing_whitespace_between_adjacent_strings: true
    noop_primitive_operations: true
    null_check_on_nullable_type_parameter: true
    omit_local_variable_types: true
    one_member_abstracts: true
    only_throw_errors: true
    parameter_assignments: true
    prefer_asserts_in_initializer_lists: true
    prefer_constructors_over_static_methods: true
    prefer_expression_function_bodies: true
    prefer_if_null_operators: true
    prefer_interpolation_to_compose_strings: true
    prefer_mixin: true
    prefer_null_aware_method_calls: true
    public_member_api_docs: false # Disable for now, enable later for production
    require_trailing_commas: true
    secure_pubspec_urls: true
    sort_constructors_first: true
    sort_pub_dependencies: true
    sort_unnamed_constructors_first: true
    tighten_type_of_initializing_formals: true
    type_annotate_public_apis: true
    unawaited_futures: true
    unnecessary_await_in_return: true
    unnecessary_constructor_name: true
    unnecessary_lambdas: true
    unnecessary_library_directive: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_checks: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_nullable_for_final_variable_declarations: true
    unnecessary_raw_strings: true
    unnecessary_statements: true
    use_enums: true
    use_if_null_to_convert_nulls_to_bools: true
    use_is_even_rather_than_modulo: true
    use_late_for_private_fields_and_variables: true
    use_named_constants: true
    use_raw_strings: true
    use_string_buffers: true
    use_super_parameters: true
    use_test_throws_matchers: true
    use_to_and_as_if_applicable: true

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options